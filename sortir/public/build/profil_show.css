main {
  display: flex;
  justify-content: center;
  align-items: center;
}
main .wrapper {
  display: flex;
  align-items: center;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  border-radius: 10px;
  padding: 20px;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  background: #e8e8e8;
}
main .wrapper .swag {
  position: absolute;
  top: 0;
  width: 100%;
  height: 105px;
  background: hsl(230.4deg, 8%, calc(15% * 1));
}
main .wrapper .img {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  margin: 0 0 30px 0;
  padding: 6px;
  border: 2px solid #232429;
  background-color: #FF3CAC;
  background-image: linear-gradient(225deg, #FF3CAC 0%, #784BA0 50%, #2B86C5 100%);
  animation: gradient 60s ease infinite;
  background-size: 400% 400%;
  z-index: 1;
}
@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
main .wrapper hr {
  height: 1px;
  background: hsl(212.4deg, 47%, calc(45% * 1));
  width: 90%;
  border: none;
  margin-bottom: 2px;
  margin: 0 0 30px 0;
}
main .wrapper .info {
  background: white;
  display: flex;
  justify-content: space-between;
  flex-grow: 1;
  padding: 10px;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  border-radius: 5px;
}
main .wrapper .info .key {
  margin: 0 50px 0 0;
}
main .wrapper .info .value label {
  font-family: HMSansLatin-SemiBold;
}
main .wrapper .info .key,
main .wrapper .info .value {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}
main .wrapper .info .key label,
main .wrapper .info .value label {
  flex-grow: 1;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wcm9maWxfc2hvdy5zY3NzIiwid2VicGFjazovLy8uL21peGlucy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VDb0JFO0VBRUUsdUJEckJZO0VDd0JaLG1CRHhCb0I7QUFDeEI7QUFDRTtFQ2lCQTtFQUtFLG1CRHJCb0I7RUN3QnBCLHNCRHhCNEI7RUFDNUI7RUFDQTtFQUNBO0VBQ0E7RUM4QkY7RUQ1QkU7QUFHSjtBQURJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUNSSjtBRFlGO0FBQUk7RUFDRTtFQUNBO0VBQ0E7RUNlSjtFRGJJO0VBQ0E7RUFDQTtFQytCSjtFQUNBO0VBQ1k7RUFDWjtFRGhDSTtBQUtOO0FDYUU7RUFDRTtJQUNFO0VEWEo7RUNhRTtJQUNFO0VEWEo7RUNhRTtJQUNFO0VEWEo7QUFDRjtBQWJJO0VBQ0U7RUN6Qko7RUQyQkk7RUFDQTtFQUNBO0VBQ0E7QUFlTjtBQVpJO0VBQ0U7RUN0Qko7RUFFRSw4QkRxQmdCO0VBQ2Q7RUFDQTtFQ1BKO0VEU0k7QUFlTjtBQWRNO0VBQ0U7QUFnQlI7QUFiUTtFQ2hETjtBRGdFRjtBQVpNOztFQ3BDSjtFQVFFLHNCRDhCOEI7RUFDMUI7QUFlUjtBQWRROztFQUNFO0FBaUJWLEMiLCJmaWxlIjoicHJvZmlsX3Nob3cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi9taXhpbnMuc2Nzcyc7XHJcblxyXG5tYWluIHtcclxuICBAaW5jbHVkZSBmbGV4KGNlbnRlciwgY2VudGVyKTtcclxuXHJcbiAgLndyYXBwZXIge1xyXG4gICAgQGluY2x1ZGUgZmxleChub25lLCBjZW50ZXIsIGNvbHVtbik7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBAaW5jbHVkZSBzaGFkb3c7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZThlOGU4O1xyXG5cclxuICAgIC5zd2FnIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDA7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwNXB4O1xyXG4gICAgICBAaW5jbHVkZSBjb2xvcihncmV5ZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmltZyB7XHJcbiAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgaGVpZ2h0OiAxNTBweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICBAaW5jbHVkZSBzaGFkb3c7XHJcbiAgICAgIG1hcmdpbjogMCAwIDMwcHggMDtcclxuICAgICAgcGFkZGluZzogNnB4O1xyXG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAkZ3JleWQ7XHJcbiAgICAgIEBpbmNsdWRlIGdyYWRpZW50O1xyXG4gICAgICB6LWluZGV4OiAxO1xyXG4gICAgfVxyXG5cclxuICAgIGhyIHtcclxuICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgIEBpbmNsdWRlIGNvbG9yKGJsdWVkKTtcclxuICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAycHg7XHJcbiAgICAgIG1hcmdpbjogMCAwIDMwcHggMDtcclxuICAgIH1cclxuXHJcbiAgICAuaW5mbyB7XHJcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICBAaW5jbHVkZSBmbGV4KHNwYWNlLWJldHdlZW4pO1xyXG4gICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgIEBpbmNsdWRlIHNoYWRvdztcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAua2V5IHtcclxuICAgICAgICBtYXJnaW46IDAgNTBweCAwIDA7XHJcbiAgICAgIH1cclxuICAgICAgLnZhbHVlIHtcclxuICAgICAgICBsYWJlbCB7XHJcbiAgICAgICAgICBAaW5jbHVkZSBib2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAua2V5LFxyXG4gICAgICAudmFsdWUge1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgobm9uZSwgbm9uZSwgY29sdW1uKTtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgICAgbGFiZWwge1xyXG4gICAgICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIkZ3JleWw6IGhzbCgwZGVnICsgMC42NHR1cm4sIDclLCAyMCUpO1xyXG4kZ3JleWQ6IGhzbCgwZGVnICsgMC42NHR1cm4sIDglLCAxNSUpO1xyXG4kYmx1ZWw6IGhzbCgwZGVnICsgMC41OHR1cm4sIDYyJSwgNjIlKTtcclxuJGJsdWVkOiBoc2woMGRlZyArIDAuNTl0dXJuLCA0NyUsIDQ1JSk7XHJcblxyXG5AbWl4aW4gYm9sZCB7XHJcbiAgZm9udC1mYW1pbHk6IEhNU2Fuc0xhdGluLVNlbWlCb2xkO1xyXG59XHJcblxyXG5AbWl4aW4gY29sb3IoJGNvbG9yOiBncmV5bCwgJGxpZ2h0OiAxKSB7XHJcbiAgYmFja2dyb3VuZDogbWFwLWdldChcclxuICAgIChcclxuICAgICAgZ3JleWQ6IGhzbCgwZGVnICsgMC42NHR1cm4sIDglLCBjYWxjKDE1JSAqICN7JGxpZ2h0fSkpLFxyXG4gICAgICBncmV5bDogaHNsKDBkZWcgKyAwLjY0dHVybiwgNyUsIGNhbGMoMjAlICogI3skbGlnaHR9KSksXHJcbiAgICAgIGJsdWVsOiBoc2woMGRlZyArIDAuNTh0dXJuLCA2MiUsIGNhbGMoNjIlICogI3skbGlnaHR9KSksXHJcbiAgICAgIGJsdWVkOiBoc2woMGRlZyArIDAuNTl0dXJuLCA0NyUsIGNhbGMoNDUlICogI3skbGlnaHR9KSksXHJcbiAgICApLFxyXG4gICAgJGNvbG9yXHJcbiAgKTtcclxufVxyXG5cclxuQG1peGluIGZsZXgoJGp1c3RpZnk6IG5vbmUsICRhbGlnbjogbm9uZSwgJGRpcmVjdGlvbjogbm9uZSkge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgQGlmICRqdXN0aWZ5ICE9IG5vbmUge1xyXG4gICAganVzdGlmeS1jb250ZW50OiAkanVzdGlmeTtcclxuICB9XHJcbiAgQGlmICRhbGlnbiAhPSBub25lIHtcclxuICAgIGFsaWduLWl0ZW1zOiAkYWxpZ247XHJcbiAgfVxyXG4gIEBpZiAkZGlyZWN0aW9uICE9IG5vbmUge1xyXG4gICAgZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWF4c2l6ZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5AbWl4aW4gc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XHJcbn1cclxuXHJcbkBtaXhpbiBib3JkZXIge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG5AbWl4aW4gZ3JhZGllbnQge1xyXG4gIEBrZXlmcmFtZXMgZ3JhZGllbnQge1xyXG4gICAgMCUge1xyXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7XHJcbiAgICB9XHJcbiAgICA1MCUge1xyXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjNDQUM7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDIyNWRlZywgI0ZGM0NBQyAwJSwgIzc4NEJBMCA1MCUsICMyQjg2QzUgMTAwJSk7XHJcbiAgICAgICAgICAgICAgYW5pbWF0aW9uOiBncmFkaWVudCA2MHMgZWFzZSBpbmZpbml0ZTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IDQwMCUgNDAwJTtcclxufVxyXG5cclxuQG1peGluIGNoZWNrIHtcclxuICBsYWJlbCB7XHJcbiAgICBAaW5jbHVkZSBmbGV4KG5vbmUsIGNlbnRlcik7XHJcbiAgfVxyXG4gIGlucHV0IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIGlucHV0ICsgbGFiZWw6OmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIG1pbi13aWR0aDogMTBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRncmV5bDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDdweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG1hcmdpbjogMCAxMHB4IDAgMDtcclxuICB9XHJcbiAgaW5wdXQ6Y2hlY2tlZCArIGxhYmVsOjpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogJGdyZXlsO1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gYnV0dG9uZCgpIHtcclxuICBAaW5jbHVkZSBjb2xvcihibHVlZCk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGhlaWdodDogNDBweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgbWFyZ2luOiAxNXB4IDAgMCAwO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=*/